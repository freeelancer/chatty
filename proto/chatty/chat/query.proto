syntax = "proto3";

package chatty.chat;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "chatty/chat/params.proto";
import "chatty/chat/genesis.proto";

option go_package = "chatty/x/chat/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/chatty/chat/params";
  
  }
  
  // Queries a list of Conversation items.
  rpc Conversation (QueryConversationRequest) returns (QueryConversationResponse) {
    option (google.api.http).get = "/chatty/chat/conversation/{chatter_a}/{chatter_b}";
  
  }
  
  // Queries a list of Conversations items.
  rpc Conversations (QueryConversationsRequest) returns (QueryConversationsResponse) {
    option (google.api.http).get = "/chatty/chat/conversation/{chatter}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryConversationRequest {
  string chatter_a = 1;
  string chatter_b = 2;
}

message QueryConversationResponse {
  Conversation conversation = 1;
}

message QueryConversationsRequest {
  string chatter = 1;
}

message QueryConversationsResponse {
  repeated Conversation conversations = 1;
}

